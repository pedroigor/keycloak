name: Keycloak CI

on:
  push:
    branches-ignore: [main]
  # as the ci.yml contains actions that are required for PRs to be merged, it will always need to run on all PRs
  pull_request: {}
  schedule:
    - cron: '0 20,23,2,5 * * *'
  workflow_dispatch:

env:
  DEFAULT_JDK_VERSION: 11
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

concurrency:
  # Only cancel jobs for new commits on PRs, and always do a complete run on other branches (e.g. `main`).
  # See: https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
  group: keycloak-ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    if: ${{ ( github.event_name != 'schedule' ) || ( github.event_name == 'schedule' && github.repository == 'keycloak/keycloak' ) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.DEFAULT_JDK_VERSION }}
          cache: 'maven'
      - name: Update maven settings
        run: mkdir -p ~/.m2 ; cp .github/settings.xml ~/.m2/

      - name: Build Keycloak
        run: |
           ./mvnw clean install -nsu -B -e -DskipTests -Pdistribution
           ./mvnw clean install -nsu -B -e -f testsuite/integration-arquillian/servers/auth-server -Pauth-server-quarkus

      - name: Store Keycloak artifacts
        id: store-keycloak
        uses: actions/upload-artifact@v3
        with:
          name: keycloak-artifacts.zip
          retention-days: 1
          path: |
            ~/.m2/repository/org/keycloak
            !~/.m2/repository/org/keycloak/**/*.tar.gz

      - name: Remove keycloak artifacts before caching
        if: steps.cache.outputs.cache-hit != 'true'
        run: rm -rf ~/.m2/repository/org/keycloak

  quarkus-tests:
    name: Quarkus Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 115
    env:
      MAVEN_OPTS: -Xmx1024m
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.DEFAULT_JDK_VERSION }}
          cache: 'maven'
      - name: Cleanup org.keycloak artifacts
        run: rm -rf ~/.m2/repository/org/keycloak >/dev/null || true

      - name: Download built keycloak
        id: download-keycloak
        uses: actions/download-artifact@v3
        with:
          path: ~/.m2/repository/org/keycloak/
          name: keycloak-artifacts.zip
      - name: Update maven settings
        run: mkdir -p ~/.m2 ; cp .github/settings.xml ~/.m2/

      - name: Prepare the local distribution archives
        run: ./mvnw clean install -DskipTests -Pdistribution

      - name: Run Quarkus Integration Tests
        run: |
          ./mvnw clean install -nsu -B -f quarkus/tests/pom.xml | misc/log/trimmer.sh
          TEST_RESULT=${PIPESTATUS[0]}
          find . -path '*/target/surefire-reports/*.xml' | zip -q reports-quarkus-tests.zip -@
          exit $TEST_RESULT

      - name: Run Quarkus Storage Tests
        run: |
          ./mvnw clean install -nsu -B -f quarkus/tests/pom.xml -Ptest-database -Dtest=PostgreSQLDistTest,MariaDBDistTest#testSuccessful,MySQLDistTest#testSuccessful,DatabaseOptionsDistTest,JPAStoreDistTest,HotRodStoreDistTest,MixedStoreDistTest | misc/log/trimmer.sh
          TEST_RESULT=${PIPESTATUS[0]}
          find . -path '*/target/surefire-reports/*.xml' | zip -q reports-quarkus-tests.zip -@
          exit $TEST_RESULT

      - name: Run Quarkus Tests in Docker
        run: |
          ./mvnw clean install -nsu -B -f quarkus/tests/pom.xml -Dkc.quarkus.tests.dist=docker | misc/log/trimmer.sh
          TEST_RESULT=${PIPESTATUS[0]}
          exit $TEST_RESULT

      - name: Analyze Test and/or Coverage Results
        uses: runforesight/foresight-test-kit-action@v1.3.0
        if: always() && github.repository == 'keycloak/keycloak'
        with:
          api_key: ${{ secrets.FORESIGHT_API_KEY }}
          test_format: JUNIT
          test_framework: JUNIT
          test_path: 'quarkus/tests/integration/target/surefire-reports/*.xml'

      - name: Quarkus test reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: reports-quarkus-tests
          retention-days: 14
          path: reports-quarkus-tests.zip
          if-no-files-found: ignore