name: Keycloak CI

on:
  push:
    branches-ignore: [main]
  # as the ci.yml contains actions that are required for PRs to be merged, it will always need to run on all PRs
  pull_request: {}
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  DEFAULT_JDK_VERSION: 11

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    if: ${{ ( github.event_name != 'schedule' ) || ( github.event_name == 'schedule' && github.repository == 'keycloak/keycloak' ) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.DEFAULT_JDK_VERSION }}
          cache: 'maven'
      - name: Update maven settings
        run: mkdir -p ~/.m2 ; cp .github/settings.xml ~/.m2/

      - name: Build Keycloak
        run: |
           ./mvnw clean install -nsu -B -e -DskipTests -Pdistribution
           ./mvnw clean install -nsu -B -e -f testsuite/integration-arquillian/servers/auth-server -Pauth-server-quarkus

      - name: Store Keycloak artifacts
        id: store-keycloak
        uses: actions/upload-artifact@v3
        with:
          name: keycloak-artifacts.zip
          retention-days: 1
          path: |
            ~/.m2/repository/org/keycloak
            !~/.m2/repository/org/keycloak/**/*.tar.gz

      - name: Remove keycloak artifacts before caching
        if: steps.cache.outputs.cache-hit != 'true'
        run: rm -rf ~/.m2/repository/org/keycloak

  test:
    name: Base testsuite
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: ['quarkus']
        tests: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check whether HEAD^ contains HotRod storage relevant changes
        run: echo "GIT_HOTROD_RELEVANT_DIFF=$( git diff --name-only HEAD^ | egrep -ic -e '^model/map-hot-rod|^model/map/|^model/build-processor' )" >> $GITHUB_ENV

      - name: Cache Maven packages
        if: ${{ github.event_name != 'pull_request' || matrix.server != 'quarkus-map-hot-rod' || env.GIT_HOTROD_RELEVANT_DIFF != 0 }}
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: cache-2-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-1-${{ runner.os }}-m2

      - name: Download built keycloak
        if: ${{ github.event_name != 'pull_request' || matrix.server != 'quarkus-map-hot-rod' || env.GIT_HOTROD_RELEVANT_DIFF != 0 }}
        id: download-keycloak
        uses: actions/download-artifact@v3
        with:
          path: ~/.m2/repository/org/keycloak/
          name: keycloak-artifacts.zip

      # - name: List M2 repo
      #   run: |
      #     find ~ -name *dist*.zip
      #     ls -lR ~/.m2/repository

      - uses: actions/setup-java@v3
        if: ${{ github.event_name != 'pull_request' || matrix.server != 'quarkus-map-hot-rod' || env.GIT_HOTROD_RELEVANT_DIFF != 0 }}
        with:
          distribution: 'temurin'
          java-version: ${{ env.DEFAULT_JDK_VERSION }}
      - name: Update maven settings
        if: ${{ github.event_name != 'pull_request' || matrix.server != 'quarkus-map-hot-rod' || env.GIT_HOTROD_RELEVANT_DIFF != 0 }}
        run: mkdir -p ~/.m2 ; cp .github/settings.xml ~/.m2/
      - name: Prepare test providers
        if: ${{ matrix.server == 'quarkus' || matrix.server == 'quarkus-map' }}
        run: ./mvnw clean install -nsu -B -e -f testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers -Pauth-server-quarkus
      - name: Run base tests
        if: ${{ github.event_name != 'pull_request' || matrix.server != 'quarkus-map-hot-rod' || env.GIT_HOTROD_RELEVANT_DIFF != 0 }}
        run: |
          declare -A PARAMS TESTGROUP
          PARAMS["quarkus"]="-Pauth-server-quarkus"

          ./mvnw clean install -nsu -B -Pauth-server-quarkus -Dtest=KcOidcBrokerTest -f testsuite/integration-arquillian/tests/base/pom.xml | misc/log/trimmer.sh

          TEST_RESULT=${PIPESTATUS[0]}
          find . -path '*/target/surefire-reports/*.xml' | zip -q reports-${{ matrix.server }}-base-tests-${{ matrix.tests }}.zip -@
          exit $TEST_RESULT

      - name: Base test reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: reports-${{ matrix.server }}-base-tests-${{ matrix.tests }}
          retention-days: 14
          path: reports-${{ matrix.server }}-base-tests-${{ matrix.tests }}.zip
          if-no-files-found: ignore
